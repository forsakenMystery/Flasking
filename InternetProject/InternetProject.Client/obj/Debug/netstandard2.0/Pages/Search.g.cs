#pragma checksum "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e4660847ae468402fccfd1600c8d978b297f924b"
// <auto-generated/>
#pragma warning disable 1591
namespace InternetProject.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using InternetProject.Client;
    using InternetProject.Client.Shared;
    using Microsoft.AspNetCore.Blazor.Browser.Interop;
    using InternetProject.ViewModels;
    using InternetProject.Models;
    using static InternetProject.Client.Statics;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/Search")]
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/Search/{name}")]
    public class Search : Microsoft.AspNetCore.Blazor.Components.BlazorComponent, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.OpenElement(0, "h1");
            builder.AddContent(1, "\n    ");
            builder.OpenElement(2, "i");
            builder.AddContent(3, "\n        ");
            builder.OpenElement(4, "img");
            builder.AddAttribute(5, "src", "../img/search.jpg");
            builder.AddAttribute(6, "style", "width:45px;height:45px;");
            builder.CloseElement();
            builder.AddContent(7, "\n        Search...\n    ");
            builder.CloseElement();
            builder.AddContent(8, "\n");
            builder.CloseElement();
            builder.AddContent(9, "\n");
            builder.OpenElement(10, "hr");
            builder.CloseElement();
            builder.AddContent(11, "\n");
            builder.OpenElement(12, "div");
            builder.AddContent(13, "\n    ");
            builder.OpenElement(14, "div");
            builder.AddAttribute(15, "class", "row");
            builder.AddContent(16, "\n        ");
            builder.OpenElement(17, "div");
            builder.AddAttribute(18, "class", "col-md-3 SearchBox");
            builder.AddContent(19, "\n            ");
            builder.OpenElement(20, "div");
            builder.AddContent(21, "\n                ");
            builder.OpenElement(22, "label");
            builder.AddAttribute(23, "for", "brand");
            builder.AddContent(24, "Brand:");
            builder.CloseElement();
            builder.AddContent(25, "\n");
            builder.AddContent(26, "                    ");
            builder.OpenElement(27, "br");
            builder.CloseElement();
            builder.AddContent(28, "\n                    ");
            builder.OpenElement(29, "select");
            builder.AddAttribute(30, "name", "brand");
            builder.AddAttribute(31, "class", "SearchInput");
            builder.AddAttribute(32, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(GetBrands));
            builder.AddAttribute(33, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(BrandID));
            builder.AddAttribute(34, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => BrandID = __value, BrandID));
            builder.AddContent(35, "\n");
#line 30 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                         if (Brands == null)
                        {
                            if (string.IsNullOrEmpty(imgname))
                            {

#line default
#line hidden
            builder.AddContent(36, "                                ");
            builder.OpenElement(37, "option");
            builder.AddAttribute(38, "value", Guid.Empty);
            builder.AddContent(39, "----Select----");
            builder.CloseElement();
            builder.AddContent(40, "\n");
#line 35 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                            }
                            else
                            {

#line default
#line hidden
            builder.AddContent(41, "                                ");
            builder.OpenElement(42, "option");
            builder.AddAttribute(43, "value", _brandId);
            builder.AddContent(44, imgname);
            builder.CloseElement();
            builder.AddContent(45, "\n");
#line 39 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                            }
                        }
                        else
                        {

#line default
#line hidden
            builder.AddContent(46, "                            ");
            builder.OpenElement(47, "option");
            builder.AddAttribute(48, "value", Guid.Empty);
            builder.AddContent(49, "----Select----");
            builder.CloseElement();
            builder.AddContent(50, "\n");
#line 44 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                            foreach (var item in Brands)
                            {

#line default
#line hidden
            builder.AddContent(51, "                                ");
            builder.OpenElement(52, "option");
            builder.AddAttribute(53, "value", item.ID);
            builder.AddContent(54, item.Name);
            builder.CloseElement();
            builder.AddContent(55, "\n");
#line 47 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                            }
                        }

#line default
#line hidden
            builder.AddContent(56, "                    ");
            builder.CloseElement();
            builder.AddContent(57, "\n");
            builder.AddContent(58, "            ");
            builder.CloseElement();
            builder.AddContent(59, "\n        ");
            builder.CloseElement();
            builder.AddContent(60, "\n        ");
            builder.OpenElement(61, "div");
            builder.AddAttribute(62, "class", "col-md-3 SearchBox");
            builder.AddContent(63, "\n            ");
            builder.OpenElement(64, "div");
            builder.AddContent(65, "\n                ");
            builder.OpenElement(66, "label");
            builder.AddAttribute(67, "for", "CarName");
            builder.AddContent(68, "Name:");
            builder.CloseElement();
            builder.AddContent(69, "\n                ");
            builder.OpenElement(70, "br");
            builder.CloseElement();
            builder.AddContent(71, "\n                ");
            builder.OpenElement(72, "input");
            builder.AddAttribute(73, "type", "text");
            builder.AddAttribute(74, "name", "CarName");
            builder.AddAttribute(75, "class", "SearchInput");
            builder.AddAttribute(76, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(carName));
            builder.AddAttribute(77, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => carName = __value, carName));
            builder.CloseElement();
            builder.AddContent(78, "\n            ");
            builder.CloseElement();
            builder.AddContent(79, "\n        ");
            builder.CloseElement();
            builder.AddContent(80, "\n        ");
            builder.OpenElement(81, "div");
            builder.AddAttribute(82, "class", "col-md-3 SearchBox");
            builder.AddContent(83, "\n            ");
            builder.OpenElement(84, "div");
            builder.AddContent(85, "\n                ");
            builder.OpenElement(86, "label");
            builder.AddAttribute(87, "for", "fueltype");
            builder.AddContent(88, "Fuel:");
            builder.CloseElement();
            builder.AddContent(89, "\n                ");
            builder.OpenElement(90, "br");
            builder.CloseElement();
            builder.AddContent(91, "\n                ");
            builder.OpenElement(92, "select");
            builder.AddAttribute(93, "name", "fueltype");
            builder.AddAttribute(94, "class", "SearchInput");
            builder.AddAttribute(95, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(fueltype));
            builder.AddAttribute(96, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => fueltype = __value, fueltype));
            builder.AddContent(97, "\n                    ");
            builder.OpenElement(98, "option");
            builder.AddAttribute(99, "value", "-100");
            builder.AddContent(100, "----Select----");
            builder.CloseElement();
            builder.AddContent(101, "\n");
#line 66 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                       index = 0;

#line default
#line hidden
            builder.AddContent(102, "                    ");
#line 67 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                     foreach (var item in Enum.GetValues(typeof(FuelType)))
                    {

#line default
#line hidden
            builder.AddContent(103, "                        ");
            builder.OpenElement(104, "option");
            builder.AddAttribute(105, "value", index);
            builder.AddContent(106, item);
            builder.CloseElement();
            builder.AddContent(107, "\n");
#line 70 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                        index++;
                    }

#line default
#line hidden
            builder.AddContent(108, "                ");
            builder.CloseElement();
            builder.AddContent(109, "\n            ");
            builder.CloseElement();
            builder.AddContent(110, "\n        ");
            builder.CloseElement();
            builder.AddContent(111, "\n        ");
            builder.OpenElement(112, "div");
            builder.AddAttribute(113, "class", "col-md-3 SearchBox");
            builder.AddContent(114, "\n            ");
            builder.OpenElement(115, "div");
            builder.AddContent(116, "\n                ");
            builder.OpenElement(117, "label");
            builder.AddAttribute(118, "for", "Gbox");
            builder.AddContent(119, "Gear Box:");
            builder.CloseElement();
            builder.AddContent(120, "\n                ");
            builder.OpenElement(121, "br");
            builder.CloseElement();
            builder.AddContent(122, "\n                ");
            builder.OpenElement(123, "select");
            builder.AddAttribute(124, "name", "Gbox");
            builder.AddAttribute(125, "class", "SearchInput");
            builder.AddAttribute(126, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(gbox));
            builder.AddAttribute(127, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => gbox = __value, gbox));
            builder.AddContent(128, "\n                    ");
            builder.OpenElement(129, "option");
            builder.AddAttribute(130, "value", "-100");
            builder.AddContent(131, "----Select----");
            builder.CloseElement();
            builder.AddContent(132, "\n");
#line 81 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                       index = 0;

#line default
#line hidden
            builder.AddContent(133, "                    ");
#line 82 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                     foreach (var item in Enum.GetValues(typeof(GearboxType)))
                    {

#line default
#line hidden
            builder.AddContent(134, "                        ");
            builder.OpenElement(135, "option");
            builder.AddAttribute(136, "value", index);
            builder.AddContent(137, item);
            builder.CloseElement();
            builder.AddContent(138, "\n");
#line 85 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                        index++;
                    }

#line default
#line hidden
            builder.AddContent(139, "                ");
            builder.CloseElement();
            builder.AddContent(140, "\n            ");
            builder.CloseElement();
            builder.AddContent(141, "\n        ");
            builder.CloseElement();
            builder.AddContent(142, "\n        ");
            builder.AddContent(143, "\n        ");
            builder.OpenElement(144, "div");
            builder.AddAttribute(145, "class", "col-md-3 SearchBox");
            builder.AddContent(146, "\n            ");
            builder.OpenElement(147, "div");
            builder.AddContent(148, "\n                ");
            builder.OpenElement(149, "label");
            builder.AddAttribute(150, "for", "CClass");
            builder.AddContent(151, "Class:");
            builder.CloseElement();
            builder.AddContent(152, "\n                ");
            builder.OpenElement(153, "br");
            builder.CloseElement();
            builder.AddContent(154, "\n                ");
            builder.OpenElement(155, "select");
            builder.AddAttribute(156, "name", "CClass");
            builder.AddAttribute(157, "class", "SearchInput");
            builder.AddAttribute(158, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(carcalss));
            builder.AddAttribute(159, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => carcalss = __value, carcalss));
            builder.AddContent(160, "\n                    ");
            builder.OpenElement(161, "option");
            builder.AddAttribute(162, "value", "-100");
            builder.AddContent(163, "----Select----");
            builder.CloseElement();
            builder.AddContent(164, "\n");
#line 97 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                       index = 0;

#line default
#line hidden
            builder.AddContent(165, "                    ");
#line 98 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                     foreach (var item in Enum.GetValues(typeof(CarClassType)))
                    {

#line default
#line hidden
            builder.AddContent(166, "                        ");
            builder.OpenElement(167, "option");
            builder.AddAttribute(168, "value", index);
            builder.AddContent(169, item);
            builder.CloseElement();
            builder.AddContent(170, "\n");
#line 101 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                        index++;
                    }

#line default
#line hidden
            builder.AddContent(171, "                ");
            builder.CloseElement();
            builder.AddContent(172, "\n            ");
            builder.CloseElement();
            builder.AddContent(173, "\n        ");
            builder.CloseElement();
            builder.AddContent(174, "\n        ");
            builder.OpenElement(175, "div");
            builder.AddAttribute(176, "class", "col-md-3 SearchBox");
            builder.AddContent(177, "\n            ");
            builder.OpenElement(178, "div");
            builder.AddContent(179, "\n                ");
            builder.OpenElement(180, "label");
            builder.AddAttribute(181, "for", "FHAnded");
            builder.AddContent(182, "First Handed:");
            builder.CloseElement();
            builder.AddContent(183, "\n                ");
            builder.OpenElement(184, "br");
            builder.CloseElement();
            builder.AddContent(185, "\n                ");
            builder.OpenElement(186, "select");
            builder.AddAttribute(187, "name", "FHAnded");
            builder.AddAttribute(188, "class", "SearchInput");
            builder.AddAttribute(189, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(fh));
            builder.AddAttribute(190, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => fh = __value, fh));
            builder.AddContent(191, "\n                    ");
            builder.OpenElement(192, "option");
            builder.AddAttribute(193, "value", "-100");
            builder.AddContent(194, "----Select----");
            builder.CloseElement();
            builder.AddContent(195, "\n                    ");
            builder.OpenElement(196, "option");
            builder.AddAttribute(197, "value", "0");
            builder.AddContent(198, "Yes");
            builder.CloseElement();
            builder.AddContent(199, "\n                    ");
            builder.OpenElement(200, "option");
            builder.AddAttribute(201, "value", "1");
            builder.AddContent(202, "No");
            builder.CloseElement();
            builder.AddContent(203, "\n                ");
            builder.CloseElement();
            builder.AddContent(204, "\n            ");
            builder.CloseElement();
            builder.AddContent(205, "\n        ");
            builder.CloseElement();
            builder.AddContent(206, "\n        ");
            builder.OpenElement(207, "div");
            builder.AddAttribute(208, "class", "col-md-3 SearchBox");
            builder.AddContent(209, "\n            ");
            builder.OpenElement(210, "div");
            builder.AddContent(211, "\n                ");
            builder.OpenElement(212, "label");
            builder.AddAttribute(213, "for", "Havpic");
            builder.AddContent(214, "Picture:");
            builder.CloseElement();
            builder.AddContent(215, "\n                ");
            builder.OpenElement(216, "br");
            builder.CloseElement();
            builder.AddContent(217, "\n                ");
            builder.OpenElement(218, "select");
            builder.AddAttribute(219, "name", "Havpic");
            builder.AddAttribute(220, "class", "SearchInput");
            builder.AddAttribute(221, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(hp));
            builder.AddAttribute(222, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => hp = __value, hp));
            builder.AddContent(223, "\n                    ");
            builder.OpenElement(224, "option");
            builder.AddAttribute(225, "value", "-100");
            builder.AddContent(226, "----Select----");
            builder.CloseElement();
            builder.AddContent(227, "\n                    ");
            builder.OpenElement(228, "option");
            builder.AddAttribute(229, "value", "0");
            builder.AddContent(230, "Yes");
            builder.CloseElement();
            builder.AddContent(231, "\n                    ");
            builder.OpenElement(232, "option");
            builder.AddAttribute(233, "value", "1");
            builder.AddContent(234, "No");
            builder.CloseElement();
            builder.AddContent(235, "\n                ");
            builder.CloseElement();
            builder.AddContent(236, "\n            ");
            builder.CloseElement();
            builder.AddContent(237, "\n        ");
            builder.CloseElement();
            builder.AddContent(238, "\n        ");
            builder.OpenElement(239, "div");
            builder.AddAttribute(240, "class", "col-md-3 SearchBox");
            builder.AddContent(241, "\n            ");
            builder.OpenElement(242, "div");
            builder.AddContent(243, "\n                ");
            builder.OpenElement(244, "label");
            builder.AddAttribute(245, "for", "PLL");
            builder.AddContent(246, "Planned Sell:");
            builder.CloseElement();
            builder.AddContent(247, "\n                ");
            builder.OpenElement(248, "br");
            builder.CloseElement();
            builder.AddContent(249, "\n                ");
            builder.OpenElement(250, "select");
            builder.AddAttribute(251, "name", "PLL");
            builder.AddAttribute(252, "class", "SearchInput");
            builder.AddAttribute(253, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(planned));
            builder.AddAttribute(254, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => planned = __value, planned));
            builder.AddContent(255, "\n                    ");
            builder.OpenElement(256, "option");
            builder.AddAttribute(257, "value", "-100");
            builder.AddContent(258, "----Select----");
            builder.CloseElement();
            builder.AddContent(259, "\n                    ");
            builder.OpenElement(260, "option");
            builder.AddAttribute(261, "value", "0");
            builder.AddContent(262, "Yes");
            builder.CloseElement();
            builder.AddContent(263, "\n                    ");
            builder.OpenElement(264, "option");
            builder.AddAttribute(265, "value", "1");
            builder.AddContent(266, "No");
            builder.CloseElement();
            builder.AddContent(267, "\n                ");
            builder.CloseElement();
            builder.AddContent(268, "\n            ");
            builder.CloseElement();
            builder.AddContent(269, "\n        ");
            builder.CloseElement();
            builder.AddContent(270, "\n        ");
            builder.AddContent(271, "\n        ");
            builder.OpenElement(272, "div");
            builder.AddAttribute(273, "class", "col-md-3 SearchBox");
            builder.AddContent(274, "\n            ");
            builder.OpenElement(275, "div");
            builder.AddContent(276, "\n                ");
            builder.OpenElement(277, "label");
            builder.AddAttribute(278, "for", "PPrice");
            builder.AddContent(279, "Price:");
            builder.CloseElement();
            builder.AddContent(280, "\n                ");
            builder.OpenElement(281, "small");
            builder.AddAttribute(282, "class", "SearchRangeIndicator");
            builder.AddAttribute(283, "id", "PriceRanges");
            builder.AddContent(284, "From: NULL To: NULL");
            builder.CloseElement();
            builder.AddContent(285, "\n                ");
            builder.OpenElement(286, "br");
            builder.CloseElement();
            builder.AddContent(287, "\n                ");
            builder.OpenElement(288, "center");
            builder.AddContent(289, "\n                    ");
            builder.OpenElement(290, "input");
            builder.AddAttribute(291, "id", "sliderPrice");
            builder.AddAttribute(292, "type", "range");
            builder.AddAttribute(293, "multiple", "");
            builder.AddAttribute(294, "value", "0,1000");
            builder.AddAttribute(295, "name", "PPrice");
            builder.AddAttribute(296, "min", "0");
            builder.AddAttribute(297, "max", "1000");
            builder.CloseElement();
            builder.AddContent(298, "\n                ");
            builder.CloseElement();
            builder.AddContent(299, "\n            ");
            builder.CloseElement();
            builder.AddContent(300, "\n        ");
            builder.CloseElement();
            builder.AddContent(301, "\n        ");
            builder.OpenElement(302, "div");
            builder.AddAttribute(303, "class", "col-md-3 SearchBox");
            builder.AddContent(304, "\n            ");
            builder.OpenElement(305, "div");
            builder.AddContent(306, "\n                ");
            builder.OpenElement(307, "label");
            builder.AddAttribute(308, "for", "Myear");
            builder.AddContent(309, "Manufacturing Year:");
            builder.CloseElement();
            builder.AddContent(310, "\n                ");
            builder.OpenElement(311, "small");
            builder.AddAttribute(312, "class", "SearchRangeIndicator");
            builder.AddAttribute(313, "id", "MyearRanges");
            builder.AddContent(314, "From: NULL To: NULL");
            builder.CloseElement();
            builder.AddContent(315, "\n                ");
            builder.OpenElement(316, "br");
            builder.CloseElement();
            builder.AddContent(317, "\n                ");
            builder.OpenElement(318, "center");
            builder.AddContent(319, "\n                    ");
            builder.OpenElement(320, "input");
            builder.AddAttribute(321, "id", "sliderMYear");
            builder.AddAttribute(322, "type", "range");
            builder.AddAttribute(323, "multiple", "");
            builder.AddAttribute(324, "value", "0,50");
            builder.AddAttribute(325, "name", "Myaer");
            builder.AddAttribute(326, "min", "0");
            builder.AddAttribute(327, "max", "50");
            builder.CloseElement();
            builder.AddContent(328, "\n                ");
            builder.CloseElement();
            builder.AddContent(329, "\n            ");
            builder.CloseElement();
            builder.AddContent(330, "\n        ");
            builder.CloseElement();
            builder.AddContent(331, "\n        ");
            builder.OpenElement(332, "div");
            builder.AddAttribute(333, "class", "col-md-3 SearchBox");
            builder.AddContent(334, "\n            ");
            builder.OpenElement(335, "div");
            builder.AddContent(336, "\n                ");
            builder.OpenElement(337, "label");
            builder.AddAttribute(338, "for", "KMM");
            builder.AddContent(339, "Distance:");
            builder.CloseElement();
            builder.AddContent(340, "\n                ");
            builder.OpenElement(341, "small");
            builder.AddAttribute(342, "class", "SearchRangeIndicator");
            builder.AddAttribute(343, "id", "KMRanges");
            builder.AddContent(344, "From: NULL To: NULL (km)");
            builder.CloseElement();
            builder.AddContent(345, "\n                ");
            builder.OpenElement(346, "br");
            builder.CloseElement();
            builder.AddContent(347, "\n                ");
            builder.OpenElement(348, "center");
            builder.AddContent(349, "\n                    ");
            builder.OpenElement(350, "input");
            builder.AddAttribute(351, "id", "sliderKM");
            builder.AddAttribute(352, "type", "range");
            builder.AddAttribute(353, "multiple", "");
            builder.AddAttribute(354, "value", "0,1000");
            builder.AddAttribute(355, "name", "KMM");
            builder.AddAttribute(356, "min", "0");
            builder.AddAttribute(357, "max", "1000");
            builder.CloseElement();
            builder.AddContent(358, "\n                ");
            builder.CloseElement();
            builder.AddContent(359, "\n            ");
            builder.CloseElement();
            builder.AddContent(360, "\n        ");
            builder.CloseElement();
            builder.AddContent(361, "\n        ");
            builder.OpenElement(362, "div");
            builder.AddAttribute(363, "class", "col-md-3 SearchBox");
            builder.AddContent(364, "\n            ");
            builder.OpenElement(365, "div");
            builder.AddContent(366, "\n                ");
            builder.OpenElement(367, "br");
            builder.CloseElement();
            builder.AddContent(368, "\n                ");
            builder.OpenElement(369, "strong");
            builder.AddAttribute(370, "style", "float:left;cursor:pointer");
            builder.AddAttribute(371, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(GridToTable));
            builder.AddContent(372, "Show Type: ");
            builder.AddContent(373, GridOrTable);
            builder.CloseElement();
            builder.AddContent(374, "\n                ");
            builder.OpenElement(375, "button");
            builder.AddAttribute(376, "class", "Searchbutton");
            builder.AddAttribute(377, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(SearchFunction));
            builder.AddContent(378, "Search...");
            builder.CloseElement();
            builder.AddContent(379, "\n            ");
            builder.CloseElement();
            builder.AddContent(380, "\n        ");
            builder.CloseElement();
            builder.AddContent(381, "\n    ");
            builder.CloseElement();
            builder.AddContent(382, "\n");
            builder.CloseElement();
            builder.AddContent(383, "\n");
#line 179 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
 if (!searchflag)
{

#line default
#line hidden
            builder.AddContent(384, "    ");
            builder.OpenElement(385, "hr");
            builder.CloseElement();
            builder.AddContent(386, "\n");
#line 182 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
    for (int i = 0; i < 10; i++)
    {

#line default
#line hidden
            builder.AddContent(387, "        ");
            builder.OpenElement(388, "br");
            builder.CloseElement();
            builder.AddContent(389, "\n");
#line 185 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
    }
}
else
{
    if (Ads == null)
    {

#line default
#line hidden
            builder.AddContent(390, "        ");
            builder.OpenElement(391, "hr");
            builder.CloseElement();
            builder.AddContent(392, "\n        ");
            builder.OpenComponent<InternetProject.Client.Pages.wait>(393);
            builder.CloseComponent();
            builder.AddContent(394, "\n");
#line 193 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
        for (int i = 0; i < 10; i++)
        {

#line default
#line hidden
            builder.AddContent(395, "            ");
            builder.OpenElement(396, "br");
            builder.CloseElement();
            builder.AddContent(397, "\n");
#line 196 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
        }
    }
    else
    {

#line default
#line hidden
            builder.AddContent(398, "        ");
            builder.OpenElement(399, "br");
            builder.CloseElement();
            builder.AddContent(400, "\n");
#line 201 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
        if (!table)
        {

#line default
#line hidden
            builder.AddContent(401, "            ");
            builder.OpenElement(402, "hr");
            builder.CloseElement();
            builder.AddContent(403, "\n            ");
            builder.OpenElement(404, "div");
            builder.AddAttribute(405, "class", "row");
            builder.AddContent(406, "\n");
#line 205 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                 foreach (var item in Ads)
                {
                    var pathh = string.Empty;
                    if (item.Images.Count != 0)
                    {
                        pathh = $"data:image/jpg;base64,{item.Images.ElementAt(0).Value}";
                    }
                    else { pathh = "../img/no-image.png"; }
                    var hrefValue = $"/AdDetailes/{ToBase64(item.ID)}";

#line default
#line hidden
            builder.AddContent(407, "                    ");
            builder.OpenElement(408, "a");
            builder.AddAttribute(409, "class", "col-md-4");
            builder.AddAttribute(410, "href", hrefValue);
            builder.AddContent(411, "\n                        ");
            builder.OpenElement(412, "div");
            builder.AddAttribute(413, "class", "SearchResultItem");
            builder.AddContent(414, "\n                            ");
            builder.OpenElement(415, "div");
            builder.AddAttribute(416, "class", "innerSearch row");
            builder.AddContent(417, "\n                                ");
            builder.OpenElement(418, "div");
            builder.AddAttribute(419, "class", "col-md-4");
            builder.AddContent(420, "\n                                    ");
            builder.OpenElement(421, "img");
            builder.AddAttribute(422, "class", "SearchImageCar");
            builder.AddAttribute(423, "src", pathh);
            builder.CloseElement();
            builder.AddContent(424, "\n                                ");
            builder.CloseElement();
            builder.AddContent(425, "\n                                ");
            builder.OpenElement(426, "div");
            builder.AddAttribute(427, "class", "col-md-8");
            builder.AddContent(428, "\n                                    ");
            builder.OpenElement(429, "small");
            builder.AddAttribute(430, "class", "SearchLeft");
            builder.AddContent(431, "Name:");
            builder.CloseElement();
            builder.AddContent(432, "\n                                    ");
            builder.OpenElement(433, "small");
            builder.AddAttribute(434, "class", "SearchRight");
            builder.AddContent(435, item.Car.CarName);
            builder.CloseElement();
            builder.AddContent(436, "\n                                    ");
            builder.OpenElement(437, "br");
            builder.CloseElement();
            builder.AddContent(438, "\n                                    ");
            builder.OpenElement(439, "small");
            builder.AddAttribute(440, "class", "SearchLeft");
            builder.AddContent(441, "Brand:");
            builder.CloseElement();
            builder.AddContent(442, "\n");
#line 225 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                                       var path = $"../img/car logos/{item.Car.Brand.ImgPath}.png";

#line default
#line hidden
            builder.AddContent(443, "                                    ");
            builder.OpenElement(444, "div");
            builder.AddAttribute(445, "class", "SearchRight");
            builder.AddContent(446, "\n                                        ");
            builder.OpenElement(447, "img");
            builder.AddAttribute(448, "class", "CarImagePreview");
            builder.AddAttribute(449, "src", path);
            builder.CloseElement();
            builder.AddContent(450, "\n                                        ");
            builder.OpenElement(451, "small");
            builder.AddAttribute(452, "style", "float:right");
            builder.AddContent(453, item.Car.Brand.Name);
            builder.CloseElement();
            builder.AddContent(454, "\n                                    ");
            builder.CloseElement();
            builder.AddContent(455, "\n                                    ");
            builder.OpenElement(456, "br");
            builder.CloseElement();
            builder.AddContent(457, "\n                                    ");
            builder.OpenElement(458, "small");
            builder.AddAttribute(459, "class", "SearchLeft");
            builder.AddContent(460, "Distance Traveled:");
            builder.CloseElement();
            builder.AddContent(461, "\n                                    ");
            builder.OpenElement(462, "small");
            builder.AddAttribute(463, "class", "SearchRight");
            builder.AddContent(464, item.KM);
            builder.AddContent(465, " (km)");
            builder.CloseElement();
            builder.AddContent(466, "\n                                    ");
            builder.OpenElement(467, "br");
            builder.CloseElement();
            builder.AddContent(468, "\n                                    ");
            builder.OpenElement(469, "small");
            builder.AddAttribute(470, "class", "SearchLeft");
            builder.AddContent(471, "Color:");
            builder.CloseElement();
            builder.AddContent(472, "\n                                    ");
            builder.OpenElement(473, "div");
            builder.AddAttribute(474, "class", "SearchRight");
            builder.AddContent(475, "\n                                        ");
            builder.OpenElement(476, "div");
            builder.AddAttribute(477, "class", "CarColorPreView");
            builder.AddAttribute(478, "style", "background-color:" + (item.Color.Code));
            builder.CloseElement();
            builder.AddContent(479, "\n                                        ");
            builder.OpenElement(480, "small");
            builder.AddAttribute(481, "style", "float:right");
            builder.AddContent(482, item.Color.Color);
            builder.CloseElement();
            builder.AddContent(483, "\n                                    ");
            builder.CloseElement();
            builder.AddContent(484, "\n                                    ");
            builder.OpenElement(485, "br");
            builder.CloseElement();
            builder.AddContent(486, "\n                                    ");
            builder.OpenElement(487, "small");
            builder.AddAttribute(488, "class", "SearchLeft");
            builder.AddContent(489, "Price:");
            builder.CloseElement();
            builder.AddContent(490, "\n                                    ");
            builder.OpenElement(491, "small");
            builder.AddAttribute(492, "class", "SearchRight");
            builder.AddContent(493, item.Price);
            builder.CloseElement();
            builder.AddContent(494, "\n                                ");
            builder.CloseElement();
            builder.AddContent(495, "\n                            ");
            builder.CloseElement();
            builder.AddContent(496, "\n                        ");
            builder.CloseElement();
            builder.AddContent(497, "\n                    ");
            builder.CloseElement();
            builder.AddContent(498, "\n");
#line 246 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                }

#line default
#line hidden
            builder.AddContent(499, "            ");
            builder.CloseElement();
            builder.AddContent(500, "\n");
#line 248 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
        }
        else
        {

#line default
#line hidden
            builder.AddContent(501, "            ");
            builder.OpenElement(502, "table");
            builder.AddAttribute(503, "class", "table");
            builder.AddContent(504, "\n                ");
            builder.OpenElement(505, "thead");
            builder.AddContent(506, "\n                    ");
            builder.OpenElement(507, "tr");
            builder.AddContent(508, "\n                        ");
            builder.OpenElement(509, "th");
            builder.AddAttribute(510, "style", "cursor:pointer");
            builder.AddAttribute(511, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(()=> {nname = !nname;Ads= (nname) ? Ads.OrderBy(x => x.Car.CarName).ToList() :  Ads.OrderByDescending(x => x.Car.CarName).ToList(); }));
            builder.AddContent(512, "Name");
            builder.AddContent(513, (nname) ? "˄" : "˅");
            builder.CloseElement();
            builder.AddContent(514, "\n                            ");
            builder.OpenElement(515, "th");
            builder.AddAttribute(516, "style", "cursor:pointer");
            builder.AddAttribute(517, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(()=> {Ads= (brand) ? Ads.OrderBy(x => x.Car.Brand.Name).ToList() :  Ads.OrderByDescending(x => x.Car.Brand.Name).ToList();brand = !brand; }));
            builder.AddContent(518, "Brand");
            builder.AddContent(519, (brand) ? "˄" : "˅");
            builder.CloseElement();
            builder.AddContent(520, "\n                                ");
            builder.OpenElement(521, "th");
            builder.AddAttribute(522, "style", "cursor:pointer");
            builder.AddAttribute(523, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(()=> {Ads= (dtkm) ? Ads.OrderBy(x => x.KM).ToList() :  Ads.OrderByDescending(x => x.KM).ToList();dtkm = !dtkm; }));
            builder.AddContent(524, "Distance Traveled. (km) ");
            builder.AddContent(525, (dtkm) ? "˄" : "˅");
            builder.CloseElement();
            builder.AddContent(526, "\n                                    ");
            builder.OpenElement(527, "th");
            builder.AddContent(528, "Color");
            builder.CloseElement();
            builder.AddContent(529, "\n                                    ");
            builder.OpenElement(530, "th");
            builder.AddAttribute(531, "style", "cursor:pointer");
            builder.AddAttribute(532, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(()=> {Ads= (pr) ? Ads.OrderBy(x => x.Price).ToList() :  Ads.OrderByDescending(x => x.Price).ToList();pr = !pr; }));
            builder.AddContent(533, "Price ");
            builder.AddContent(534, (pr) ? "˄" : "˅");
            builder.CloseElement();
            builder.AddContent(535, "\n                                        ");
            builder.OpenElement(536, "th");
            builder.AddContent(537, "Details");
            builder.CloseElement();
            builder.AddContent(538, "\n                                    ");
            builder.CloseElement();
            builder.AddContent(539, "\n                                ");
            builder.CloseElement();
            builder.AddContent(540, "\n                                ");
            builder.OpenElement(541, "tbody");
            builder.AddContent(542, "\n");
#line 267 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                                     foreach (var item in Ads)
                                    {
                                        var hrefValue = $"/AdDetailes/{ToBase64(item.ID)}";

#line default
#line hidden
            builder.AddContent(543, "                                        ");
            builder.OpenElement(544, "tr");
            builder.AddContent(545, "\n                                            ");
            builder.OpenElement(546, "td");
            builder.AddContent(547, item.Car.CarName);
            builder.CloseElement();
            builder.AddContent(548, "\n                                            ");
            builder.OpenElement(549, "td");
            builder.AddContent(550, item.Car.Brand.Name);
            builder.CloseElement();
            builder.AddContent(551, "\n                                            ");
            builder.OpenElement(552, "td");
            builder.AddContent(553, item.KM);
            builder.CloseElement();
            builder.AddContent(554, "\n                                            ");
            builder.OpenElement(555, "td");
            builder.AddContent(556, "\n                                                ");
            builder.OpenElement(557, "div");
            builder.AddAttribute(558, "class", "CarColorPreViewTable");
            builder.AddAttribute(559, "style", "background-color:" + (item.Color.Code));
            builder.CloseElement();
            builder.AddContent(560, "\n                                                ");
            builder.OpenElement(561, "text");
            builder.AddAttribute(562, "style", "float:left");
            builder.AddContent(563, item.Color.Color);
            builder.CloseElement();
            builder.AddContent(564, "\n                                            ");
            builder.CloseElement();
            builder.AddContent(565, "\n                                            ");
            builder.OpenElement(566, "td");
            builder.AddContent(567, item.Price);
            builder.CloseElement();
            builder.AddContent(568, "\n                                            ");
            builder.OpenElement(569, "td");
            builder.OpenElement(570, "a");
            builder.AddAttribute(571, "href", hrefValue);
            builder.AddContent(572, "Details");
            builder.CloseElement();
            builder.CloseElement();
            builder.AddContent(573, "\n                                        ");
            builder.CloseElement();
            builder.AddContent(574, "\n");
#line 281 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
                                    }

#line default
#line hidden
            builder.AddContent(575, "                                ");
            builder.CloseElement();
            builder.AddContent(576, "\n                            ");
            builder.CloseElement();
            builder.AddContent(577, "\n");
#line 284 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"

                        }
                    }
                }

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 288 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Search.cshtml"
           
    [Parameter]
    string name { get; set; }
    bool nname = false, brand = false, dtkm = false, pr = false;
    string imgpath = string.Empty;
    string imgname = string.Empty;
    bool searchflag = false;
    SearchViewModel SVM = new SearchViewModel();
    string carName = string.Empty;
    int index = 0;
    int fueltype = -100;
    int carcalss = -100;
    int gbox = -100;
    int fh = -100;
    int hp = -100;
    int planned = -100;
    List<Ad> Ads;
    List<Ad> NewAds;
    int NewFinded = 0;
    IList<CarBrand> Brands;
    Guid _brandId;
    string BrandID { get => _brandId.ToString(); set => _brandId = Guid.Parse(value); }
    bool CanSearch = false;
    bool table = false;
    string GridOrTable = "Grid";
    protected override void OnInit()
    {
        SVM.OnPropertyChange += () =>
        {
            if (Ads != null) Ads.Clear();
            CanSearch = false;
        };
        SVM.Skip = -1;
        OnScroll += LoadMore;
        if (!string.IsNullOrEmpty(name))
        {
            var s = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(name));
            var p = s.Split(';');
            if (p[0] == "00")
            {
                _brandId = Guid.Parse(p[1]);
                imgpath = p[3];
                imgname = p[2];
            }
        }
    }
    async Task GetBrands()
    {
        if (Brands == null)
        {
            Brands = await Http.GetBrands();
        }
    }
    async Task SearchFunction()
    {
        searchflag = true;

        if (_brandId != Guid.Empty) SVM.Brand = _brandId;
        else SVM.Brand = null;

        SVM.CarName = carName;

        SVM.Skip = 0;

        if (fueltype != -100) SVM.Fuel = (FuelType)fueltype;
        else SVM.Fuel = null;

        if (carcalss != -100) SVM.CarClass = (CarClassType)carcalss;
        else SVM.CarClass = null;

        if (gbox != -100) SVM.Gearbox = (GearboxType)gbox;
        else SVM.Gearbox = null;

        if (fh == 0) SVM.FirstHanded = true;
        else if (fh == 1) SVM.FirstHanded = false;
        else SVM.FirstHanded = null;

        if (hp == 0) SVM.HavePic = true;
        else if (hp == 1) SVM.HavePic = false;
        else SVM.HavePic = null;

        if (planned == 0) SVM.Planned = true;
        else if (planned == 1) SVM.Planned = false;
        else SVM.Planned = null;

        SVM.PriceS = null;
        SVM.PriceE = null;
        var r = RegisteredFunction.Invoke<string>("GetSliderValue", "sliderPrice");
        if (r != "0;0")
        {
            var rr = r.Split(';');
            if (rr[0] != rr[1])
            {
                var HH = int.Parse(rr[0]);
                var LL = int.Parse(rr[1]);
                SVM.PriceS = (LL * 1000000) + 10000000;
                SVM.PriceE = (HH * 1000000) + 10000000;
            }
        }

        SVM.MYearStart = null;
        SVM.MYearEnd = null;
        r = RegisteredFunction.Invoke<string>("GetSliderValue", "sliderMYear");
        if (r != "0;0")
        {
            var rr = r.Split(';');
            if (rr[0] != rr[1])
            {
                var HH = int.Parse(rr[0]);
                var LL = int.Parse(rr[1]);
                SVM.MYearStart = LL + 1970;
                SVM.MYearEnd = HH + 1970;
            }
        }

        SVM.KME = null;
        SVM.KMS = null;
        r = RegisteredFunction.Invoke<string>("GetSliderValue", "sliderKM");
        if (r != "0;0")
        {
            var rr = r.Split(';');
            if (rr[0] != rr[1])
            {
                var HH = int.Parse(rr[0]);
                var LL = int.Parse(rr[1]);
                SVM.KMS = LL * 1000;
                SVM.KME = HH * 1000;
            }
        }
        if (NewAds == null && !CanSearch)
        {
            if (Ads == null) Ads = new List<Ad>();
            NewAds = await Http.SendJsonAsync<List<Ad>>(HttpMethod.Post, "api/Car/Search", SVM);
            Ads.AddRange(NewAds);
            NewFinded = NewAds.Count;
            NewAds = null;
            CanSearch = true;
            Toast($"{NewFinded} New result founded.", ToastType.Sucess);
        }
    }
    protected override void OnAfterRender()
    {

        RegisteredFunction.Invoke<bool>("MultiSliderActive");
        RegisteredFunction.Invoke<bool>("SliderBinder", "sliderPrice", "PriceRanges", 1000000, 10000000);
        RegisteredFunction.Invoke<bool>("SliderBinder", "sliderMYear", "MyearRanges", 1, 1970);
        RegisteredFunction.Invoke<bool>("SliderBinder", "sliderKM", "KMRanges", 1000, 0);
    }
    private void GridToTable()
    {
        table = !table;
        if (GridOrTable == "Grid") GridOrTable = "Table";
        else GridOrTable = "Grid";
    }
    async Task LoadMore()
    {
        if (SVM.Skip > -1)
        {
            SVM.Skip++;
            if (NewAds == null && NewFinded != 0)
            {
                if (Ads == null) Ads = new List<Ad>();
                NewAds = await Http.SendJsonAsync<List<Ad>>(HttpMethod.Post, "api/Car/Search", SVM);
                Ads.AddRange(NewAds);
                NewFinded = NewAds.Count;
                NewAds = null;
                Toast($"{NewFinded} New result founded.", ToastType.Sucess);

            }
        }

    }
    public void Dispose()
    {
        OnScroll -= LoadMore;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
