#pragma checksum "E:\Code\InternetProject\InternetProject.Client\Pages\AdDetailes.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4ba9ce9872dc2e23ffec295d5f208c72124003ef"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace InternetProject.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using InternetProject.Client;
    using InternetProject.Client.Shared;
    using Microsoft.AspNetCore.Blazor.Browser.Interop;
    using InternetProject.ViewModels;
    using InternetProject.Models;
    using static InternetProject.Client.Statics;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/AdDetailes")]
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/AdDetailes/{name}")]
    public class AdDetailes : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 198 "E:\Code\InternetProject\InternetProject.Client\Pages\AdDetailes.cshtml"
           
    [Parameter]
    string name { get; set; }
    Ad ad;
    bool fullphone = false;
    protected async override Task OnInitAsync()
    {
        if (string.IsNullOrEmpty(name)) UriHelper.NavigateTo("/");
        name = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(name));
        if (!Guid.TryParse(name, out var V)) UriHelper.NavigateTo("/");
        ad = await Http.GetJsonAsync<Ad>("api/Car/Detailes/" + name);
        if (ad.ID == Guid.Empty) Toast("Not Found!!!", ToastType.Error);
    }
    protected override void OnAfterRender() => RegisteredFunction.Invoke<bool>("InitSlider");
    void ShowPhone() => fullphone = !fullphone;
    async Task SendMail()
    {
        var VMV = new MailViewModel();
        var mail= RegisteredFunction.Invoke<string>("Prompt");
        if (string.IsNullOrEmpty(mail)) Toast("No mail Address", ToastType.Error);
        else
        {
            VMV.Address = mail;
            VMV.Uri = UriHelper.GetAbsoluteUri();
            await Http.SendJsonAsync(HttpMethod.Post, "api/Email/Mail", VMV);
            Toast("Your message have been sent.",ToastType.Sucess);
        }
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
