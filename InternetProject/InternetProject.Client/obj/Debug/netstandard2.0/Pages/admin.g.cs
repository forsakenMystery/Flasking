#pragma checksum "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\admin.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ba7a48fdd87c18041764f1595051dce52f4f488a"
// <auto-generated/>
#pragma warning disable 1591
namespace InternetProject.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using InternetProject.Client;
    using InternetProject.Client.Shared;
    using static InternetProject.Client.Statics;
    using InternetProject.Models;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/admin")]
    public class admin : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.OpenElement(0, "h1");
            builder.AddContent(1, "Admin");
            builder.CloseElement();
            builder.AddContent(2, "\n");
            builder.OpenElement(3, "hr");
            builder.CloseElement();
            builder.AddContent(4, "\n");
            builder.OpenElement(5, "div");
            builder.AddContent(6, "\n");
#line 11 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\admin.cshtml"
     if (Ads == null)
    {

#line default
#line hidden
            builder.AddContent(7, "        ");
            builder.OpenElement(8, "br");
            builder.CloseElement();
            builder.AddContent(9, "\n        ");
            builder.OpenElement(10, "br");
            builder.CloseElement();
            builder.AddContent(11, "\n        ");
            builder.OpenElement(12, "center");
            builder.AddContent(13, "\n            ");
            builder.OpenElement(14, "strong");
            builder.AddContent(15, "No new Ads to Show!!!");
            builder.CloseElement();
            builder.AddContent(16, "\n        ");
            builder.CloseElement();
            builder.AddContent(17, "\n");
#line 18 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\admin.cshtml"
    }
    else
    {

#line default
#line hidden
            builder.AddContent(18, "        ");
            builder.OpenElement(19, "center");
            builder.AddContent(20, "\n            ");
            builder.OpenElement(21, "strong");
            builder.AddContent(22, "New Ads:");
            builder.CloseElement();
            builder.AddContent(23, "\n        ");
            builder.CloseElement();
            builder.AddContent(24, "\n        ");
            builder.OpenElement(25, "hr");
            builder.CloseElement();
            builder.AddContent(26, "\n        ");
            builder.OpenElement(27, "div");
            builder.AddAttribute(28, "class", "row");
            builder.AddContent(29, "\n");
#line 26 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\admin.cshtml"
             foreach (var item in Ads)
            {
                var pathh = string.Empty;
                if (item.Images.Count != 0)
                {
                    //var t = Http.DownloadImageAsync(item.Images.ElementAt(0).Name);
                    pathh = $"data:image/jpg;base64,{item.Images.ElementAt(0).Value}";
                }
                else
                { pathh = "../img/no-image.png"; }
                var hrefValue = $"/AdDetailes/{ToBase64(item.ID)}";

#line default
#line hidden
            builder.AddContent(30, "                ");
            builder.OpenElement(31, "div");
            builder.AddAttribute(32, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(()=>item.Verified=!item.Verified));
            builder.AddAttribute(33, "class", "col-md-4");
            builder.AddContent(34, "\n                    ");
            builder.OpenElement(35, "div");
            builder.AddAttribute(36, "class", item.Verified?"AdminTrue":"AdminFalse");
            builder.AddContent(37, "\n                        ");
            builder.OpenElement(38, "div");
            builder.AddAttribute(39, "class", "innerSearch row");
            builder.AddContent(40, "\n                            ");
            builder.OpenElement(41, "div");
            builder.AddAttribute(42, "class", "col-md-4");
            builder.AddContent(43, "\n                                ");
            builder.OpenElement(44, "img");
            builder.AddAttribute(45, "class", "SearchImageCar");
            builder.AddAttribute(46, "src", pathh);
            builder.CloseElement();
            builder.AddContent(47, "\n                            ");
            builder.CloseElement();
            builder.AddContent(48, "\n                            ");
            builder.OpenElement(49, "div");
            builder.AddAttribute(50, "class", "col-md-8");
            builder.AddContent(51, "\n                                ");
            builder.OpenElement(52, "small");
            builder.AddAttribute(53, "class", "SearchLeft");
            builder.AddContent(54, "Name:");
            builder.CloseElement();
            builder.AddContent(55, "\n                                ");
            builder.OpenElement(56, "small");
            builder.AddAttribute(57, "class", "SearchRight");
            builder.AddContent(58, item.Car.CarName);
            builder.CloseElement();
            builder.AddContent(59, "\n                                ");
            builder.OpenElement(60, "br");
            builder.CloseElement();
            builder.AddContent(61, "\n                                ");
            builder.OpenElement(62, "small");
            builder.AddAttribute(63, "class", "SearchLeft");
            builder.AddContent(64, "Brand:");
            builder.CloseElement();
            builder.AddContent(65, "\n");
#line 48 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\admin.cshtml"
                                   var path = $"../img/car logos/{item.Car.Brand.ImgPath}.png";

#line default
#line hidden
            builder.AddContent(66, "                                ");
            builder.OpenElement(67, "div");
            builder.AddAttribute(68, "class", "SearchRight");
            builder.AddContent(69, "\n                                    ");
            builder.OpenElement(70, "img");
            builder.AddAttribute(71, "class", "CarImagePreview");
            builder.AddAttribute(72, "src", path);
            builder.CloseElement();
            builder.AddContent(73, "\n                                    ");
            builder.OpenElement(74, "small");
            builder.AddAttribute(75, "style", "float:right");
            builder.AddContent(76, item.Car.Brand.Name);
            builder.CloseElement();
            builder.AddContent(77, "\n                                ");
            builder.CloseElement();
            builder.AddContent(78, "\n                                ");
            builder.OpenElement(79, "br");
            builder.CloseElement();
            builder.AddContent(80, "\n                                ");
            builder.OpenElement(81, "small");
            builder.AddAttribute(82, "class", "SearchLeft");
            builder.AddContent(83, "Distance Traveled:");
            builder.CloseElement();
            builder.AddContent(84, "\n                                ");
            builder.OpenElement(85, "small");
            builder.AddAttribute(86, "class", "SearchRight");
            builder.AddContent(87, item.KM);
            builder.CloseElement();
            builder.AddContent(88, "\n                                ");
            builder.OpenElement(89, "br");
            builder.CloseElement();
            builder.AddContent(90, "\n                                ");
            builder.OpenElement(91, "small");
            builder.AddAttribute(92, "class", "SearchLeft");
            builder.AddContent(93, "Color:");
            builder.CloseElement();
            builder.AddContent(94, "\n                                ");
            builder.OpenElement(95, "div");
            builder.AddAttribute(96, "class", "SearchRight");
            builder.AddContent(97, "\n                                    ");
            builder.OpenElement(98, "div");
            builder.AddAttribute(99, "class", "CarColorPreView");
            builder.AddAttribute(100, "style", "background-color:" + (item.Color.Code));
            builder.CloseElement();
            builder.AddContent(101, "\n                                    ");
            builder.OpenElement(102, "small");
            builder.AddAttribute(103, "style", "float:right");
            builder.AddContent(104, item.Color.Color);
            builder.CloseElement();
            builder.AddContent(105, "\n                                ");
            builder.CloseElement();
            builder.AddContent(106, "\n                                ");
            builder.OpenElement(107, "br");
            builder.CloseElement();
            builder.AddContent(108, "\n                                ");
            builder.OpenElement(109, "small");
            builder.AddAttribute(110, "class", "SearchLeft");
            builder.AddContent(111, "Price:");
            builder.CloseElement();
            builder.AddContent(112, "\n                                ");
            builder.OpenElement(113, "small");
            builder.AddAttribute(114, "class", "SearchRight");
            builder.AddContent(115, item.Price);
            builder.CloseElement();
            builder.AddContent(116, "\n                            ");
            builder.CloseElement();
            builder.AddContent(117, "\n                        ");
            builder.CloseElement();
            builder.AddContent(118, "\n                    ");
            builder.CloseElement();
            builder.AddContent(119, "\n                ");
            builder.CloseElement();
            builder.AddContent(120, "\n");
#line 69 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\admin.cshtml"
            }

#line default
#line hidden
            builder.AddContent(121, "        ");
            builder.CloseElement();
            builder.AddContent(122, "\n");
#line 71 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\admin.cshtml"
    }

#line default
#line hidden
            builder.CloseElement();
            builder.AddContent(123, "\n");
            builder.OpenElement(124, "hr");
            builder.CloseElement();
            builder.AddContent(125, "\n");
            builder.OpenElement(126, "div");
            builder.AddAttribute(127, "style", "float:right");
            builder.AddContent(128, "\n    ");
            builder.OpenElement(129, "button");
            builder.AddAttribute(130, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(SendResultAsync));
            builder.AddAttribute(131, "class", "Searchbutton");
            builder.AddAttribute(132, "value", "Verify");
            builder.AddContent(133, "Verify");
            builder.CloseElement();
            builder.AddContent(134, "\n");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 77 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\admin.cshtml"
           
    IList<Ad> Ads;
    protected async override Task OnInitAsync()
    {
        if (!IsAdmin) UriHelper.NavigateTo("/");
        else Toast("Admin Page", ToastType.Warning);
        Http.DefaultRequestHeaders.Clear();
        Http.DefaultRequestHeaders.Add("AdminToken", Token.ToString());
        Ads = await Http.GetJsonAsync<IList<Ad>>("api/Car/Verify");
    }
    async Task SendResultAsync()
    {
        var temp = Ads;
        Ads = null;
        Ads = await Http.SendJsonAsync<IList<Ad>>(HttpMethod.Post, "api/Car/VerifyResult", temp);
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
