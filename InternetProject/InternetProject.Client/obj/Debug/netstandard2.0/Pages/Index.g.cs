#pragma checksum "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "16b50e1804c52a3bb5dd358f5a1a0b5e66818d3d"
// <auto-generated/>
#pragma warning disable 1591
namespace InternetProject.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using InternetProject.Client;
    using InternetProject.Client.Shared;
    using InternetProject.Models;
    using static InternetProject.Client.Statics;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/")]
    public class Index : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.OpenElement(0, "h1");
            builder.AddContent(1, "\n    ");
            builder.OpenElement(2, "i");
            builder.AddContent(3, "Asayesh Khodro...");
            builder.CloseElement();
            builder.AddContent(4, "\n");
            builder.CloseElement();
            builder.AddContent(5, "\n");
            builder.OpenElement(6, "hr");
            builder.CloseElement();
            builder.AddContent(7, "\n");
#line 10 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
  
    if (Brands == null)
    {
        for (int i = 0; i < 20; i++)
        {

#line default
#line hidden
            builder.AddContent(8, "            ");
            builder.OpenElement(9, "br");
            builder.CloseElement();
            builder.AddContent(10, "\n");
#line 16 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
        }

#line default
#line hidden
            builder.AddContent(11, "        ");
            builder.OpenComponent<InternetProject.Client.Pages.wait>(12);
            builder.CloseComponent();
            builder.AddContent(13, "\n");
#line 18 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
    }
    else
    {

#line default
#line hidden
            builder.AddContent(14, "        ");
            builder.OpenElement(15, "div");
            builder.AddAttribute(16, "class", "row");
            builder.AddContent(17, "\n            ");
            builder.OpenElement(18, "div");
            builder.AddAttribute(19, "class", "col-md-8");
            builder.AddContent(20, "\n                ");
            builder.AddContent(21, "\n                ");
            builder.OpenElement(22, "div");
            builder.AddAttribute(23, "class", "row");
            builder.AddContent(24, "\n");
#line 25 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                      
                        for (int i = 0; i < Brands.Count(); i += 3)
                        {

#line default
#line hidden
            builder.AddContent(25, "                            ");
            builder.OpenElement(26, "div");
            builder.AddAttribute(27, "class", "column");
            builder.AddContent(28, "\n");
#line 29 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                                 for (int j = 0; j < 3; j++)
                                {
                                    var path = $"../img/car logos/{Brands[i + j].ImgPath}.png";
                                    var PathValue = Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes($"00;{Brands[i + j].ID};{Brands[i + j].Name};{Brands[i + j].ImgPath}"));

#line default
#line hidden
            builder.AddContent(29, "                                    ");
            builder.OpenElement(30, "a");
            builder.AddAttribute(31, "href", "/Search/" + (PathValue));
            builder.AddContent(32, "\n                                        ");
            builder.OpenElement(33, "img");
            builder.AddAttribute(34, "style", "width:100%");
            builder.AddAttribute(35, "class", "gridimg");
            builder.AddAttribute(36, "src", path);
            builder.AddAttribute(37, "title", Brands[i+j].Name);
            builder.CloseElement();
            builder.AddContent(38, "\n                                    ");
            builder.CloseElement();
            builder.AddContent(39, "\n");
#line 36 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                                }

#line default
#line hidden
            builder.AddContent(40, "                            ");
            builder.CloseElement();
            builder.AddContent(41, "\n");
#line 38 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                        }
                    

#line default
#line hidden
            builder.AddContent(42, "                ");
            builder.CloseElement();
            builder.AddContent(43, "\n            ");
            builder.CloseElement();
            builder.AddContent(44, "\n            ");
            builder.OpenElement(45, "div");
            builder.AddAttribute(46, "class", "col-md-4");
            builder.AddContent(47, "\n");
#line 43 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                 if (NewAds.Count == 0)
                {

#line default
#line hidden
            builder.AddContent(48, "                    ");
            builder.OpenElement(49, "br");
            builder.CloseElement();
            builder.AddContent(50, "\n                    ");
            builder.OpenElement(51, "br");
            builder.CloseElement();
            builder.AddContent(52, "\n                    ");
            builder.OpenElement(53, "center");
            builder.AddContent(54, "\n                        ");
            builder.OpenElement(55, "strong");
            builder.AddContent(56, "No new Ads to Show!!!");
            builder.CloseElement();
            builder.AddContent(57, "\n                    ");
            builder.CloseElement();
            builder.AddContent(58, "\n");
#line 50 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                }
                else
                {

#line default
#line hidden
            builder.AddContent(59, "                    ");
            builder.OpenElement(60, "center");
            builder.AddContent(61, "\n                        ");
            builder.OpenElement(62, "strong");
            builder.AddContent(63, "New Ads:");
            builder.CloseElement();
            builder.AddContent(64, "\n                    ");
            builder.CloseElement();
            builder.AddContent(65, "\n                    ");
            builder.OpenElement(66, "hr");
            builder.CloseElement();
            builder.AddContent(67, "\n                    ");
            builder.OpenElement(68, "div");
            builder.AddAttribute(69, "class", "row");
            builder.AddContent(70, "\n");
#line 58 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                         foreach (var item in NewAds)
                        {
                            var pathh = string.Empty;
                            if (item.Images.Count != 0)
                            {
                                pathh = $"data:image/jpg;base64,{item.Images.ElementAt(0).Value}";
                            }
                            else
                            { pathh = "../img/no-image.png"; }
                            var hrefValue = $"/AdDetailes/{ToBase64(item.ID)}";

#line default
#line hidden
            builder.AddContent(71, "                            ");
            builder.OpenElement(72, "a");
            builder.AddAttribute(73, "href", hrefValue);
            builder.AddContent(74, "\n                                ");
            builder.OpenElement(75, "div");
            builder.AddAttribute(76, "class", "SearchResultItem");
            builder.AddContent(77, "\n                                    ");
            builder.OpenElement(78, "div");
            builder.AddAttribute(79, "class", "innerSearch row");
            builder.AddContent(80, "\n                                        ");
            builder.OpenElement(81, "div");
            builder.AddAttribute(82, "class", "col-md-4");
            builder.AddContent(83, "\n                                            ");
            builder.OpenElement(84, "img");
            builder.AddAttribute(85, "class", "SearchImageCar");
            builder.AddAttribute(86, "src", pathh);
            builder.CloseElement();
            builder.AddContent(87, "\n                                        ");
            builder.CloseElement();
            builder.AddContent(88, "\n                                        ");
            builder.OpenElement(89, "div");
            builder.AddAttribute(90, "class", "col-md-8");
            builder.AddContent(91, "\n                                            ");
            builder.OpenElement(92, "small");
            builder.AddAttribute(93, "class", "SearchLeft");
            builder.AddContent(94, "Name:");
            builder.CloseElement();
            builder.AddContent(95, "\n                                            ");
            builder.OpenElement(96, "small");
            builder.AddAttribute(97, "class", "SearchRight");
            builder.AddContent(98, item.Car.CarName);
            builder.CloseElement();
            builder.AddContent(99, "\n                                            ");
            builder.OpenElement(100, "br");
            builder.CloseElement();
            builder.AddContent(101, "\n                                            ");
            builder.OpenElement(102, "small");
            builder.AddAttribute(103, "class", "SearchLeft");
            builder.AddContent(104, "Brand:");
            builder.CloseElement();
            builder.AddContent(105, "\n");
#line 79 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                                               var path = $"../img/car logos/{item.Car.Brand.ImgPath}.png";

#line default
#line hidden
            builder.AddContent(106, "                                            ");
            builder.OpenElement(107, "div");
            builder.AddAttribute(108, "class", "SearchRight");
            builder.AddContent(109, "\n                                                ");
            builder.OpenElement(110, "img");
            builder.AddAttribute(111, "class", "CarImagePreview");
            builder.AddAttribute(112, "src", path);
            builder.CloseElement();
            builder.AddContent(113, "\n                                                ");
            builder.OpenElement(114, "small");
            builder.AddAttribute(115, "style", "float:right");
            builder.AddContent(116, item.Car.Brand.Name);
            builder.CloseElement();
            builder.AddContent(117, "\n                                            ");
            builder.CloseElement();
            builder.AddContent(118, "\n                                            ");
            builder.OpenElement(119, "br");
            builder.CloseElement();
            builder.AddContent(120, "\n                                            ");
            builder.OpenElement(121, "small");
            builder.AddAttribute(122, "class", "SearchLeft");
            builder.AddContent(123, "Distance Traveled:");
            builder.CloseElement();
            builder.AddContent(124, "\n                                            ");
            builder.OpenElement(125, "small");
            builder.AddAttribute(126, "class", "SearchRight");
            builder.AddContent(127, item.KM);
            builder.CloseElement();
            builder.AddContent(128, "\n                                            ");
            builder.OpenElement(129, "br");
            builder.CloseElement();
            builder.AddContent(130, "\n                                            ");
            builder.OpenElement(131, "small");
            builder.AddAttribute(132, "class", "SearchLeft");
            builder.AddContent(133, "Color:");
            builder.CloseElement();
            builder.AddContent(134, "\n                                            ");
            builder.OpenElement(135, "div");
            builder.AddAttribute(136, "class", "SearchRight");
            builder.AddContent(137, "\n                                                ");
            builder.OpenElement(138, "div");
            builder.AddAttribute(139, "class", "CarColorPreView");
            builder.AddAttribute(140, "style", "background-color:" + (item.Color.Code));
            builder.CloseElement();
            builder.AddContent(141, "\n                                                ");
            builder.OpenElement(142, "small");
            builder.AddAttribute(143, "style", "float:right");
            builder.AddContent(144, item.Color.Color);
            builder.CloseElement();
            builder.AddContent(145, "\n                                            ");
            builder.CloseElement();
            builder.AddContent(146, "\n                                            ");
            builder.OpenElement(147, "br");
            builder.CloseElement();
            builder.AddContent(148, "\n                                            ");
            builder.OpenElement(149, "small");
            builder.AddAttribute(150, "class", "SearchLeft");
            builder.AddContent(151, "Price:");
            builder.CloseElement();
            builder.AddContent(152, "\n                                            ");
            builder.OpenElement(153, "small");
            builder.AddAttribute(154, "class", "SearchRight");
            builder.AddContent(155, item.Price);
            builder.CloseElement();
            builder.AddContent(156, "\n                                        ");
            builder.CloseElement();
            builder.AddContent(157, "\n                                    ");
            builder.CloseElement();
            builder.AddContent(158, "\n                                ");
            builder.CloseElement();
            builder.AddContent(159, "\n                            ");
            builder.CloseElement();
            builder.AddContent(160, "\n");
#line 100 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                        }

#line default
#line hidden
            builder.AddContent(161, "                    ");
            builder.CloseElement();
            builder.AddContent(162, "\n");
#line 102 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
                }

#line default
#line hidden
            builder.AddContent(163, "            ");
            builder.CloseElement();
            builder.AddContent(164, "\n        ");
            builder.CloseElement();
            builder.AddContent(165, "\n");
#line 105 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"

    }

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 108 "C:\Users\hamme\source\repos\InternetProject\InternetProject.Client\Pages\Index.cshtml"
           
    IList<CarBrand> Brands;
    IList<Ad> NewAds = new List<Ad>();
    protected override async Task OnInitAsync()
    {
        if (Brands == null)
        {
            Brands = await Http.GetBrands();
        }
        if (NewAds.Count == 0)
        {
            NewAds = await Http.GetJsonAsync<IList<Ad>>("api/Car/Today");
            if (NewAds.Count > 0) Toast(NewAds.Count + " New Ads To Show!!!", ToastType.Sucess);
            else Toast("No New Ads To Show!!!", ToastType.Error);
        }
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
    }
}
#pragma warning restore 1591
